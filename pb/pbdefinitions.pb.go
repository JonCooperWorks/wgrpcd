// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbdefinitions.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChangeListenPortRequest struct {
	ListenPort           int32    `protobuf:"varint,1,opt,name=listenPort,proto3" json:"listenPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeListenPortRequest) Reset()         { *m = ChangeListenPortRequest{} }
func (m *ChangeListenPortRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeListenPortRequest) ProtoMessage()    {}
func (*ChangeListenPortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{0}
}

func (m *ChangeListenPortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeListenPortRequest.Unmarshal(m, b)
}
func (m *ChangeListenPortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeListenPortRequest.Marshal(b, m, deterministic)
}
func (m *ChangeListenPortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeListenPortRequest.Merge(m, src)
}
func (m *ChangeListenPortRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeListenPortRequest.Size(m)
}
func (m *ChangeListenPortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeListenPortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeListenPortRequest proto.InternalMessageInfo

func (m *ChangeListenPortRequest) GetListenPort() int32 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

type ChangeListenPortResponse struct {
	NewListenPort        int32    `protobuf:"varint,1,opt,name=newListenPort,proto3" json:"newListenPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeListenPortResponse) Reset()         { *m = ChangeListenPortResponse{} }
func (m *ChangeListenPortResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeListenPortResponse) ProtoMessage()    {}
func (*ChangeListenPortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{1}
}

func (m *ChangeListenPortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeListenPortResponse.Unmarshal(m, b)
}
func (m *ChangeListenPortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeListenPortResponse.Marshal(b, m, deterministic)
}
func (m *ChangeListenPortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeListenPortResponse.Merge(m, src)
}
func (m *ChangeListenPortResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeListenPortResponse.Size(m)
}
func (m *ChangeListenPortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeListenPortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeListenPortResponse proto.InternalMessageInfo

func (m *ChangeListenPortResponse) GetNewListenPort() int32 {
	if m != nil {
		return m.NewListenPort
	}
	return 0
}

type CreatePeerRequest struct {
	AllowedIPs           []string `protobuf:"bytes,1,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePeerRequest) Reset()         { *m = CreatePeerRequest{} }
func (m *CreatePeerRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePeerRequest) ProtoMessage()    {}
func (*CreatePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{2}
}

func (m *CreatePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePeerRequest.Unmarshal(m, b)
}
func (m *CreatePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePeerRequest.Marshal(b, m, deterministic)
}
func (m *CreatePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePeerRequest.Merge(m, src)
}
func (m *CreatePeerRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePeerRequest.Size(m)
}
func (m *CreatePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePeerRequest proto.InternalMessageInfo

func (m *CreatePeerRequest) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

type CreatePeerResponse struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	AllowedIPs           []string `protobuf:"bytes,3,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePeerResponse) Reset()         { *m = CreatePeerResponse{} }
func (m *CreatePeerResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePeerResponse) ProtoMessage()    {}
func (*CreatePeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{3}
}

func (m *CreatePeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePeerResponse.Unmarshal(m, b)
}
func (m *CreatePeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePeerResponse.Marshal(b, m, deterministic)
}
func (m *CreatePeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePeerResponse.Merge(m, src)
}
func (m *CreatePeerResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePeerResponse.Size(m)
}
func (m *CreatePeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePeerResponse proto.InternalMessageInfo

func (m *CreatePeerResponse) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *CreatePeerResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *CreatePeerResponse) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

type RekeyPeerRequest struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	AllowedIPs           []string `protobuf:"bytes,2,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RekeyPeerRequest) Reset()         { *m = RekeyPeerRequest{} }
func (m *RekeyPeerRequest) String() string { return proto.CompactTextString(m) }
func (*RekeyPeerRequest) ProtoMessage()    {}
func (*RekeyPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{4}
}

func (m *RekeyPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RekeyPeerRequest.Unmarshal(m, b)
}
func (m *RekeyPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RekeyPeerRequest.Marshal(b, m, deterministic)
}
func (m *RekeyPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RekeyPeerRequest.Merge(m, src)
}
func (m *RekeyPeerRequest) XXX_Size() int {
	return xxx_messageInfo_RekeyPeerRequest.Size(m)
}
func (m *RekeyPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RekeyPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RekeyPeerRequest proto.InternalMessageInfo

func (m *RekeyPeerRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *RekeyPeerRequest) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

type RekeyPeerResponse struct {
	PrivateKey           string   `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	AllowedIPs           []string `protobuf:"bytes,3,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RekeyPeerResponse) Reset()         { *m = RekeyPeerResponse{} }
func (m *RekeyPeerResponse) String() string { return proto.CompactTextString(m) }
func (*RekeyPeerResponse) ProtoMessage()    {}
func (*RekeyPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{5}
}

func (m *RekeyPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RekeyPeerResponse.Unmarshal(m, b)
}
func (m *RekeyPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RekeyPeerResponse.Marshal(b, m, deterministic)
}
func (m *RekeyPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RekeyPeerResponse.Merge(m, src)
}
func (m *RekeyPeerResponse) XXX_Size() int {
	return xxx_messageInfo_RekeyPeerResponse.Size(m)
}
func (m *RekeyPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RekeyPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RekeyPeerResponse proto.InternalMessageInfo

func (m *RekeyPeerResponse) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *RekeyPeerResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *RekeyPeerResponse) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

type RemovePeerRequest struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePeerRequest) Reset()         { *m = RemovePeerRequest{} }
func (m *RemovePeerRequest) String() string { return proto.CompactTextString(m) }
func (*RemovePeerRequest) ProtoMessage()    {}
func (*RemovePeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{6}
}

func (m *RemovePeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePeerRequest.Unmarshal(m, b)
}
func (m *RemovePeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePeerRequest.Marshal(b, m, deterministic)
}
func (m *RemovePeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePeerRequest.Merge(m, src)
}
func (m *RemovePeerRequest) XXX_Size() int {
	return xxx_messageInfo_RemovePeerRequest.Size(m)
}
func (m *RemovePeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePeerRequest proto.InternalMessageInfo

func (m *RemovePeerRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type RemovePeerResponse struct {
	Removed              bool     `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePeerResponse) Reset()         { *m = RemovePeerResponse{} }
func (m *RemovePeerResponse) String() string { return proto.CompactTextString(m) }
func (*RemovePeerResponse) ProtoMessage()    {}
func (*RemovePeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{7}
}

func (m *RemovePeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePeerResponse.Unmarshal(m, b)
}
func (m *RemovePeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePeerResponse.Marshal(b, m, deterministic)
}
func (m *RemovePeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePeerResponse.Merge(m, src)
}
func (m *RemovePeerResponse) XXX_Size() int {
	return xxx_messageInfo_RemovePeerResponse.Size(m)
}
func (m *RemovePeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePeerResponse proto.InternalMessageInfo

func (m *RemovePeerResponse) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

type ListPeersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersRequest) Reset()         { *m = ListPeersRequest{} }
func (m *ListPeersRequest) String() string { return proto.CompactTextString(m) }
func (*ListPeersRequest) ProtoMessage()    {}
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{8}
}

func (m *ListPeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersRequest.Unmarshal(m, b)
}
func (m *ListPeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersRequest.Marshal(b, m, deterministic)
}
func (m *ListPeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersRequest.Merge(m, src)
}
func (m *ListPeersRequest) XXX_Size() int {
	return xxx_messageInfo_ListPeersRequest.Size(m)
}
func (m *ListPeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersRequest proto.InternalMessageInfo

type ListPeersResponse struct {
	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersResponse) Reset()         { *m = ListPeersResponse{} }
func (m *ListPeersResponse) String() string { return proto.CompactTextString(m) }
func (*ListPeersResponse) ProtoMessage()    {}
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{9}
}

func (m *ListPeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersResponse.Unmarshal(m, b)
}
func (m *ListPeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersResponse.Marshal(b, m, deterministic)
}
func (m *ListPeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersResponse.Merge(m, src)
}
func (m *ListPeersResponse) XXX_Size() int {
	return xxx_messageInfo_ListPeersResponse.Size(m)
}
func (m *ListPeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersResponse proto.InternalMessageInfo

func (m *ListPeersResponse) GetPeers() []*Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type Peer struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	AllowedIPs           []string `protobuf:"bytes,2,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	ReceivedBytes        int64    `protobuf:"varint,3,opt,name=receivedBytes,proto3" json:"receivedBytes,omitempty"`
	TransmittedBytes     int64    `protobuf:"varint,4,opt,name=transmittedBytes,proto3" json:"transmittedBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1700b5ab3a81f98, []int{10}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Peer) GetAllowedIPs() []string {
	if m != nil {
		return m.AllowedIPs
	}
	return nil
}

func (m *Peer) GetReceivedBytes() int64 {
	if m != nil {
		return m.ReceivedBytes
	}
	return 0
}

func (m *Peer) GetTransmittedBytes() int64 {
	if m != nil {
		return m.TransmittedBytes
	}
	return 0
}

func init() {
	proto.RegisterType((*ChangeListenPortRequest)(nil), "pb.ChangeListenPortRequest")
	proto.RegisterType((*ChangeListenPortResponse)(nil), "pb.ChangeListenPortResponse")
	proto.RegisterType((*CreatePeerRequest)(nil), "pb.CreatePeerRequest")
	proto.RegisterType((*CreatePeerResponse)(nil), "pb.CreatePeerResponse")
	proto.RegisterType((*RekeyPeerRequest)(nil), "pb.RekeyPeerRequest")
	proto.RegisterType((*RekeyPeerResponse)(nil), "pb.RekeyPeerResponse")
	proto.RegisterType((*RemovePeerRequest)(nil), "pb.RemovePeerRequest")
	proto.RegisterType((*RemovePeerResponse)(nil), "pb.RemovePeerResponse")
	proto.RegisterType((*ListPeersRequest)(nil), "pb.ListPeersRequest")
	proto.RegisterType((*ListPeersResponse)(nil), "pb.ListPeersResponse")
	proto.RegisterType((*Peer)(nil), "pb.Peer")
}

func init() {
	proto.RegisterFile("pbdefinitions.proto", fileDescriptor_c1700b5ab3a81f98)
}

var fileDescriptor_c1700b5ab3a81f98 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x37, 0xe9, 0x2e, 0x6c, 0x06, 0x90, 0xb2, 0x86, 0x85, 0xa8, 0xac, 0x56, 0x2b, 0x8b,
	0x43, 0xc5, 0x21, 0x12, 0xbb, 0x27, 0x90, 0x90, 0x10, 0x3d, 0x21, 0x2a, 0x11, 0xf9, 0xc2, 0x39,
	0x69, 0x86, 0x62, 0x91, 0x26, 0xae, 0xed, 0xb6, 0xea, 0x8b, 0xf0, 0x66, 0xbc, 0x0f, 0xb2, 0x93,
	0xa6, 0xae, 0x03, 0x08, 0x09, 0x89, 0x63, 0x3e, 0xcf, 0xcc, 0xef, 0xf1, 0xfc, 0x13, 0x78, 0x2c,
	0x8a, 0x12, 0xbf, 0xf0, 0x9a, 0x6b, 0xde, 0xd4, 0x2a, 0x15, 0xb2, 0xd1, 0x0d, 0x09, 0x45, 0x41,
	0x5f, 0xc3, 0xb3, 0xe9, 0xd7, 0xbc, 0x5e, 0xe0, 0x8c, 0x2b, 0x8d, 0x75, 0xd6, 0x48, 0xcd, 0x70,
	0xb5, 0x46, 0xa5, 0xc9, 0x35, 0x40, 0xd5, 0xc3, 0x24, 0xb8, 0x09, 0x26, 0x67, 0xcc, 0x21, 0xf4,
	0x1d, 0x24, 0xc3, 0x54, 0x25, 0x9a, 0x5a, 0x21, 0x79, 0x01, 0x8f, 0x6a, 0xdc, 0xce, 0xfc, 0xf4,
	0x63, 0x48, 0xef, 0xe0, 0x62, 0x2a, 0x31, 0xd7, 0x98, 0x21, 0x4a, 0x47, 0x36, 0xaf, 0xaa, 0x66,
	0x8b, 0xe5, 0x87, 0x4c, 0x25, 0xc1, 0xcd, 0x68, 0x12, 0x31, 0x87, 0x50, 0x09, 0xc4, 0x4d, 0xea,
	0x04, 0xaf, 0x01, 0x84, 0xe4, 0x9b, 0x5c, 0xe3, 0x47, 0xdc, 0x59, 0xb5, 0x88, 0x39, 0x84, 0x5c,
	0x41, 0x24, 0xd6, 0x45, 0xc5, 0xe7, 0xe6, 0x38, 0xb4, 0xc7, 0x07, 0xe0, 0x69, 0x8e, 0x06, 0x9a,
	0x19, 0xc4, 0x0c, 0xbf, 0xe1, 0xce, 0xbd, 0xe7, 0x51, 0xc5, 0xe0, 0xcf, 0x15, 0xc3, 0x41, 0xc5,
	0x15, 0x5c, 0x38, 0x15, 0xff, 0x4b, 0x13, 0xaf, 0x8c, 0xe4, 0xb2, 0xd9, 0xe0, 0x5f, 0x77, 0x41,
	0x53, 0x20, 0x6e, 0x4a, 0x77, 0xcd, 0x04, 0xee, 0x4b, 0x4b, 0x4b, 0x9b, 0x71, 0xce, 0xf6, 0x9f,
	0x94, 0x40, 0x6c, 0xc6, 0x6b, 0xa2, 0x55, 0xa7, 0x60, 0x86, 0xec, 0xb0, 0xbe, 0xd3, 0x33, 0x61,
	0x80, 0x9d, 0xef, 0x83, 0xdb, 0xf3, 0x54, 0x14, 0xa9, 0xd5, 0x68, 0x31, 0xfd, 0x1e, 0xc0, 0xa9,
	0xf9, 0xfe, 0xb7, 0x57, 0x36, 0x36, 0x94, 0x38, 0x47, 0xbe, 0xc1, 0xf2, 0xfd, 0x4e, 0xa3, 0x79,
	0x95, 0x60, 0x32, 0x62, 0xc7, 0x90, 0xbc, 0x84, 0x58, 0xcb, 0xbc, 0x56, 0x4b, 0xae, 0xf5, 0x3e,
	0xf0, 0xd4, 0x06, 0x0e, 0xf8, 0xed, 0x8f, 0x10, 0x1e, 0x7e, 0xe6, 0x12, 0x17, 0xeb, 0x5c, 0x96,
	0x2c, 0x9b, 0x92, 0x4f, 0x10, 0xfb, 0x5b, 0x40, 0x9e, 0x9b, 0x76, 0x7e, 0xb3, 0x56, 0xe3, 0xab,
	0x5f, 0x1f, 0xb6, 0x0f, 0x43, 0x4f, 0xc8, 0x5b, 0x80, 0x83, 0xbf, 0xc9, 0xa5, 0x8d, 0xf6, 0x97,
	0x64, 0xfc, 0xd4, 0xc7, 0x7d, 0xfa, 0x1b, 0x88, 0x7a, 0x63, 0x91, 0x27, 0x26, 0xcc, 0x77, 0xee,
	0xf8, 0xd2, 0xa3, 0xae, 0xf4, 0x61, 0xdc, 0xa4, 0x0b, 0xf3, 0x1c, 0xd3, 0x4a, 0x0f, 0x5d, 0xd1,
	0x4a, 0xf7, 0x93, 0x6e, 0xa5, 0x7d, 0x33, 0xb4, 0xd2, 0x03, 0x3b, 0xd0, 0x93, 0xe2, 0x9e, 0xfd,
	0x25, 0xdd, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xbb, 0x4b, 0xbd, 0xa9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WireguardRPCClient is the client API for WireguardRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WireguardRPCClient interface {
	ChangeListenPort(ctx context.Context, in *ChangeListenPortRequest, opts ...grpc.CallOption) (*ChangeListenPortResponse, error)
	CreatePeer(ctx context.Context, in *CreatePeerRequest, opts ...grpc.CallOption) (*CreatePeerResponse, error)
	RekeyPeer(ctx context.Context, in *RekeyPeerRequest, opts ...grpc.CallOption) (*RekeyPeerResponse, error)
	RemovePeer(ctx context.Context, in *RemovePeerRequest, opts ...grpc.CallOption) (*RemovePeerResponse, error)
	ListPeers(ctx context.Context, in *ListPeersRequest, opts ...grpc.CallOption) (*ListPeersResponse, error)
}

type wireguardRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewWireguardRPCClient(cc grpc.ClientConnInterface) WireguardRPCClient {
	return &wireguardRPCClient{cc}
}

func (c *wireguardRPCClient) ChangeListenPort(ctx context.Context, in *ChangeListenPortRequest, opts ...grpc.CallOption) (*ChangeListenPortResponse, error) {
	out := new(ChangeListenPortResponse)
	err := c.cc.Invoke(ctx, "/pb.WireguardRPC/ChangeListenPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardRPCClient) CreatePeer(ctx context.Context, in *CreatePeerRequest, opts ...grpc.CallOption) (*CreatePeerResponse, error) {
	out := new(CreatePeerResponse)
	err := c.cc.Invoke(ctx, "/pb.WireguardRPC/CreatePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardRPCClient) RekeyPeer(ctx context.Context, in *RekeyPeerRequest, opts ...grpc.CallOption) (*RekeyPeerResponse, error) {
	out := new(RekeyPeerResponse)
	err := c.cc.Invoke(ctx, "/pb.WireguardRPC/RekeyPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardRPCClient) RemovePeer(ctx context.Context, in *RemovePeerRequest, opts ...grpc.CallOption) (*RemovePeerResponse, error) {
	out := new(RemovePeerResponse)
	err := c.cc.Invoke(ctx, "/pb.WireguardRPC/RemovePeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wireguardRPCClient) ListPeers(ctx context.Context, in *ListPeersRequest, opts ...grpc.CallOption) (*ListPeersResponse, error) {
	out := new(ListPeersResponse)
	err := c.cc.Invoke(ctx, "/pb.WireguardRPC/ListPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WireguardRPCServer is the server API for WireguardRPC service.
type WireguardRPCServer interface {
	ChangeListenPort(context.Context, *ChangeListenPortRequest) (*ChangeListenPortResponse, error)
	CreatePeer(context.Context, *CreatePeerRequest) (*CreatePeerResponse, error)
	RekeyPeer(context.Context, *RekeyPeerRequest) (*RekeyPeerResponse, error)
	RemovePeer(context.Context, *RemovePeerRequest) (*RemovePeerResponse, error)
	ListPeers(context.Context, *ListPeersRequest) (*ListPeersResponse, error)
}

// UnimplementedWireguardRPCServer can be embedded to have forward compatible implementations.
type UnimplementedWireguardRPCServer struct {
}

func (*UnimplementedWireguardRPCServer) ChangeListenPort(ctx context.Context, req *ChangeListenPortRequest) (*ChangeListenPortResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeListenPort not implemented")
}
func (*UnimplementedWireguardRPCServer) CreatePeer(ctx context.Context, req *CreatePeerRequest) (*CreatePeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePeer not implemented")
}
func (*UnimplementedWireguardRPCServer) RekeyPeer(ctx context.Context, req *RekeyPeerRequest) (*RekeyPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RekeyPeer not implemented")
}
func (*UnimplementedWireguardRPCServer) RemovePeer(ctx context.Context, req *RemovePeerRequest) (*RemovePeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePeer not implemented")
}
func (*UnimplementedWireguardRPCServer) ListPeers(ctx context.Context, req *ListPeersRequest) (*ListPeersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPeers not implemented")
}

func RegisterWireguardRPCServer(s *grpc.Server, srv WireguardRPCServer) {
	s.RegisterService(&_WireguardRPC_serviceDesc, srv)
}

func _WireguardRPC_ChangeListenPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeListenPortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardRPCServer).ChangeListenPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WireguardRPC/ChangeListenPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardRPCServer).ChangeListenPort(ctx, req.(*ChangeListenPortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardRPC_CreatePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardRPCServer).CreatePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WireguardRPC/CreatePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardRPCServer).CreatePeer(ctx, req.(*CreatePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardRPC_RekeyPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RekeyPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardRPCServer).RekeyPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WireguardRPC/RekeyPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardRPCServer).RekeyPeer(ctx, req.(*RekeyPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardRPC_RemovePeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardRPCServer).RemovePeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WireguardRPC/RemovePeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardRPCServer).RemovePeer(ctx, req.(*RemovePeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WireguardRPC_ListPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPeersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardRPCServer).ListPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.WireguardRPC/ListPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardRPCServer).ListPeers(ctx, req.(*ListPeersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WireguardRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.WireguardRPC",
	HandlerType: (*WireguardRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeListenPort",
			Handler:    _WireguardRPC_ChangeListenPort_Handler,
		},
		{
			MethodName: "CreatePeer",
			Handler:    _WireguardRPC_CreatePeer_Handler,
		},
		{
			MethodName: "RekeyPeer",
			Handler:    _WireguardRPC_RekeyPeer_Handler,
		},
		{
			MethodName: "RemovePeer",
			Handler:    _WireguardRPC_RemovePeer_Handler,
		},
		{
			MethodName: "ListPeers",
			Handler:    _WireguardRPC_ListPeers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pbdefinitions.proto",
}
